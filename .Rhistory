.get_config_path
.get_config_path("LOCAL_GASPERINI_2019_DATA_DIR")
gasp_offsite <- .get_config_path("LOCAL_GASPERINI_2019_DATA_DIR")
gasp_offsite
gasp_offsite
gasp_offsite
raw_data_dir_gasp
gasp_offsite
# create raw directory
raw_data_dir_gasp <- paste0(gasp_offsite, "raw")
raw_data_dir_gasp
raw_data_dir_gasp
dir.create(raw_data_dir_gasp, recursive = TRUE)
dir.create(raw_data_dir_gasp, recursive = TRUE)
gasp_offsite <- .get_config_path("LOCAL_GASPERINI_2019_DATA_DIR")
# load libraries
library(R.utils)
# create raw directory
raw_data_dir_gasp <- paste0(gasp_offsite, "raw")
dir.create(path = raw_data_dir_gasp, recursive = TRUE)
dir.create
gasp_offsite <- .get_config_path("LOCAL_GASPERINI_2019_DATA_DIR")
# load libraries
library(R.utils)
# create raw directory
raw_data_dir_gasp <- paste0(gasp_offsite, "raw")
raw_data_dir_gasp
if (!dir.exists(raw_data_dir_gasp)) dir.create(path = raw_data_dir_gasp, recursive = TRUE)
raw_data_dir_gasp
# source config file to get gasperini offsite location
gasp_offsite <- .get_config_path("LOCAL_GASPERINI_2019_DATA_DIR")
# load required libraries
library(R.utils)
# create raw directory
raw_data_dir_gasp <- paste0(gasp_offsite, "raw")
if (!dir.exists(raw_data_dir_gasp)) dir.create(path = raw_data_dir_gasp, recursive = TRUE)
# URL of data
remote <- "https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE120861&format=file&file="
# Gasperini et al results
all_deg_results_filename <- "GSE120861_all_deg_results.at_scale.txt"
# names of genes
genes_filename <- "GSE120861_at_scale_screen.genes.txt"
# names of cells
cells_filename <- "GSE120861_at_scale_screen.cells.txt"
# "reference cells" used by Gasperini et al for computational purposes
reference_cells_filename <- "GSE120861_50k_reference_cells.rds"
# all (gRNA, gene) pairs
gRNAgroup_pair_table_filename <- "GSE120861_gene_gRNAgroup_pair_table.at_scale.txt"
# list of gRNA groups used
gRNA_groups_filename <- "GSE120861_grna_groups.at_scale.txt"
# Monocle Cell Data Set object with all gRNA data
cds_filename <- "GSE120861_at_scale_screen.cds.rds"
# Expression data
expression_filename <- "GSE120861_at_scale_screen.exprs.mtx"
# list of files to download
filenames <- c(all_deg_results_filename,
genes_filename,
cells_filename,
reference_cells_filename,
cds_filename,
expression_filename,
gRNAgroup_pair_table_filename,
gRNA_groups_filename)
print(paste0("Downloading ", filename))
# download files if not already present
for (filename in filenames) {
if (!file.exists(paste0(raw_data_dir_gasp, "/", filename))) {
print(paste0("Downloading ", filename))
source <- paste0(remote, filename, ".gz")
dest <- paste0(raw_data_dir_gasp, "/", filename, ".gz")
download.file(source, dest)
gunzip(paste0(dest))
}
}
getOption('timeout')
5 * 60 * 60
options
options(timeout = 5 * 60 * 60)
options(timeout = 5 * 60 * 60)
gasp_offsite <- .get_config_path("LOCAL_GASPERINI_2019_DATA_DIR")
# load R.utils; increase timeout to 5 hours
library(R.utils)
options(timeout = 5 * 60 * 60)
# create raw directory
raw_data_dir_gasp <- paste0(gasp_offsite, "raw")
if (!dir.exists(raw_data_dir_gasp)) dir.create(path = raw_data_dir_gasp, recursive = TRUE)
# URL of data
remote <- "https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE120861&format=file&file="
# Gasperini et al results
all_deg_results_filename <- "GSE120861_all_deg_results.at_scale.txt"
# names of genes
genes_filename <- "GSE120861_at_scale_screen.genes.txt"
# names of cells
cells_filename <- "GSE120861_at_scale_screen.cells.txt"
# "reference cells" used by Gasperini et al for computational purposes
reference_cells_filename <- "GSE120861_50k_reference_cells.rds"
# all (gRNA, gene) pairs
gRNAgroup_pair_table_filename <- "GSE120861_gene_gRNAgroup_pair_table.at_scale.txt"
# list of gRNA groups used
gRNA_groups_filename <- "GSE120861_grna_groups.at_scale.txt"
# Monocle Cell Data Set object with all gRNA data
cds_filename <- "GSE120861_at_scale_screen.cds.rds"
# Expression data
expression_filename <- "GSE120861_at_scale_screen.exprs.mtx"
# list of files to download
filenames <- c(all_deg_results_filename,
genes_filename,
cells_filename,
reference_cells_filename,
cds_filename,
expression_filename,
gRNAgroup_pair_table_filename,
gRNA_groups_filename)
# download files if not already present
for (filename in filenames) {
if (!file.exists(paste0(raw_data_dir_gasp, "/", filename))) {
print(paste0("Downloading ", filename))
source <- paste0(remote, filename, ".gz")
dest <- paste0(raw_data_dir_gasp, "/", filename, ".gz")
download.file(source, dest)
gunzip(paste0(dest))
}
}
filename
print(paste0("Downloading ", filename))
source <- paste0(remote, filename, ".gz")
dest <- paste0(raw_data_dir_gasp, "/", filename, ".gz")
download.file(source, dest)
filename
dest
gunzip(paste0(dest))
# Download the gRNA counts
remote <- "https://krishna.gs.washington.edu/content/members/ajh24/crispr_qtl_data_requests/data/"
# Download supplementary Table S2 from Cell
supplementary_table_file <- "https://www.cell.com/cms/10.1016/j.cell.2018.11.029/attachment/7319ccb0-a8c0-45f3-8203-26b9159b0102/mmc2.xlsx"
download.file(supplementary_table_file, paste0(raw_data_dir_gasp, "/Gasperini_TableS2.xlsx"))
# Download the gRNA counts
remote <- "https://krishna.gs.washington.edu/content/members/ajh24/crispr_qtl_data_requests/data/"
filename <- "all_libraries.gRNAcaptured.aggregated.txt.gz"
remote
filename
if (!file.exists(paste0(raw_data_dir_gasp, "/", filename))) {
print(paste0("Downloading ", filename))
source <- paste0(remote, filename, ".gz")
dest <- paste0(raw_data_dir_gasp, "/", filename, ".gz")
download.file(source, dest)
gunzip(paste0(dest))
}
paste0(raw_data_dir_gasp, "/", filename
)
# Download the gRNA counts
remote <- "https://krishna.gs.washington.edu/content/members/ajh24/crispr_qtl_data_requests/data/"
filename <- "all_libraries.gRNAcaptured.aggregated.txt"
if (!file.exists(paste0(raw_data_dir_gasp, "/", filename))) {
print(paste0("Downloading ", filename))
source <- paste0(remote, filename, ".gz")
dest <- paste0(raw_data_dir_gasp, "/", filename, ".gz")
download.file(source, dest)
gunzip(paste0(dest))
}
download.file(source, dest)
dest
# cell phenotype data
cell_phenodata_filename <- "GSE120861_at_scale_screen.phenoData.txt.gz"
# list of files to download
filenames <- c(all_deg_results_filename,
genes_filename,
cells_filename,
reference_cells_filename,
cds_filename,
expression_filename,
gRNAgroup_pair_table_filename,
gRNA_groups_filename,
cell_phenodata_filename)
filename <- filenames[length(filenames)]
filename
# cell phenotype data
cell_phenodata_filename <- "GSE120861_at_scale_screen.phenoData.txt"
# list of files to download
filenames <- c(all_deg_results_filename,
genes_filename,
cells_filename,
reference_cells_filename,
cds_filename,
expression_filename,
gRNAgroup_pair_table_filename,
gRNA_groups_filename,
cell_phenodata_filename)
filename <- filenames[length(filenames)]
filename
print(paste0("Downloading ", filename))
source <- paste0(remote, filename, ".gz")
dest <- paste0(raw_data_dir_gasp, "/", filename, ".gz")
download.file(source, dest)
# source config file to get gasperini offsite location
gasp_offsite <- .get_config_path("LOCAL_GASPERINI_2019_DATA_DIR")
# load R.utils; increase timeout to 5 hours
library(R.utils)
options(timeout = 5 * 60 * 60)
# create raw directory
raw_data_dir_gasp <- paste0(gasp_offsite, "raw")
if (!dir.exists(raw_data_dir_gasp)) dir.create(path = raw_data_dir_gasp, recursive = TRUE)
# URL of data
remote <- "https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE120861&format=file&file="
# Gasperini et al results
all_deg_results_filename <- "GSE120861_all_deg_results.at_scale.txt"
# names of genes
genes_filename <- "GSE120861_at_scale_screen.genes.txt"
# names of cells
cells_filename <- "GSE120861_at_scale_screen.cells.txt"
# "reference cells" used by Gasperini et al for computational purposes
reference_cells_filename <- "GSE120861_50k_reference_cells.rds"
# all (gRNA, gene) pairs
gRNAgroup_pair_table_filename <- "GSE120861_gene_gRNAgroup_pair_table.at_scale.txt"
# list of gRNA groups used
gRNA_groups_filename <- "GSE120861_grna_groups.at_scale.txt"
# Monocle Cell Data Set object with all gRNA data
cds_filename <- "GSE120861_at_scale_screen.cds.rds"
# Expression data
expression_filename <- "GSE120861_at_scale_screen.exprs.mtx"
# cell phenotype data
cell_phenodata_filename <- "GSE120861_at_scale_screen.phenoData.txt"
# list of files to download
filenames <- c(all_deg_results_filename,
genes_filename,
cells_filename,
reference_cells_filename,
cds_filename,
expression_filename,
gRNAgroup_pair_table_filename,
gRNA_groups_filename,
cell_phenodata_filename)
cell_phenodata_filename
!file.exists(paste0(raw_data_dir_gasp, "/", filename))
filename
filename <- filenames[length(filenames)]
filename
print(paste0("Downloading ", filename))
source <- paste0(remote, filename, ".gz")
dest <- paste0(raw_data_dir_gasp, "/", filename, ".gz")
download.file(source, dest)
gunzip(paste0(dest))
# source config file to get gasperini offsite location
gasp_offsite <- .get_config_path("LOCAL_GASPERINI_2019_DATA_DIR")
# load R.utils; increase timeout to 5 hours
library(R.utils)
options(timeout = 5 * 60 * 60)
# create raw directory
raw_data_dir_gasp <- paste0(gasp_offsite, "raw")
if (!dir.exists(raw_data_dir_gasp)) dir.create(path = raw_data_dir_gasp, recursive = TRUE)
# URL of data
remote <- "https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE120861&format=file&file="
# Gasperini et al results
all_deg_results_filename <- "GSE120861_all_deg_results.at_scale.txt"
# names of genes
genes_filename <- "GSE120861_at_scale_screen.genes.txt"
# names of cells
cells_filename <- "GSE120861_at_scale_screen.cells.txt"
# all (gRNA, gene) pairs
gRNAgroup_pair_table_filename <- "GSE120861_gene_gRNAgroup_pair_table.at_scale.txt"
# list of gRNA groups used
gRNA_groups_filename <- "GSE120861_grna_groups.at_scale.txt"
# Monocle Cell Data Set object with all gRNA data
cds_filename <- "GSE120861_at_scale_screen.cds.rds"
# Expression data
expression_filename <- "GSE120861_at_scale_screen.exprs.mtx"
# cell phenotype data
cell_phenodata_filename <- "GSE120861_at_scale_screen.phenoData.txt"
# list of files to download
filenames <- c(all_deg_results_filename,
genes_filename,
cells_filename,
cds_filename,
expression_filename,
gRNAgroup_pair_table_filename,
gRNA_groups_filename,
cell_phenodata_filename)
gRNAgroup_pair_table_filename
# list of files to download
filenames <- c(all_deg_results_filename,
genes_filename,
cells_filename,
cds_filename,
expression_filename,
gRNAgroup_pair_table_filename,
gRNA_groups_filename,
cell_phenodata_filename)
filename <- filenames[["gRNAgroup_pair_table_filename"]]
filename <- filenames["gRNAgroup_pair_table_filename"]
filename
filenames
names(filenames)
gasp_offsite <- .get_config_path("LOCAL_GASPERINI_2019_DATA_DIR")
# load R.utils; increase timeout to 5 hours
library(R.utils)
options(timeout = 5 * 60 * 60)
# create raw directory
raw_data_dir_gasp <- paste0(gasp_offsite, "raw")
if (!dir.exists(raw_data_dir_gasp)) dir.create(path = raw_data_dir_gasp, recursive = TRUE)
# URL of data
remote <- "https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE120861&format=file&file="
# Gasperini et al results -- stores the naive NB p-values for all tested gRNA-gene pairs
all_deg_results_filename <- "GSE120861_all_deg_results.at_scale.txt"
# names of genes -- ordered gene IDs for use in conjunction with expression mtx file
genes_filename <- "GSE120861_at_scale_screen.genes.txt"
# names of cells -- cell barcodes for use in conjunction with expression mtx file
cells_filename <- "GSE120861_at_scale_screen.cells.txt"
# all (gRNA, gene) pairs
gRNAgroup_pair_table_filename <- "GSE120861_gene_gRNAgroup_pair_table.at_scale.txt"
# list of gRNA groups used
gRNA_groups_filename <- "GSE120861_grna_groups.at_scale.txt"
# monocle Cell Data Set object with binary gRNA data
cds_filename <- "GSE120861_at_scale_screen.cds.rds"
# gene expression matrix in mtx format
expression_filename <- "GSE120861_at_scale_screen.exprs.mtx"
# cell phenotype data
cell_phenodata_filename <- "GSE120861_at_scale_screen.phenoData.txt"
# list of files to download
filenames <- c(all_deg_results_filename,
genes_filename,
cells_filename,
cds_filename,
expression_filename,
gRNAgroup_pair_table_filename,
gRNA_groups_filename,
cell_phenodata_filename)
filename <- "GSE120861_gene_gRNAgroup_pair_table.at_scale.txt"
!file.exists(paste0(raw_data_dir_gasp, "/", filename))
print(paste0("Downloading ", filename))
source <- paste0(remote, filename, ".gz")
dest <- paste0(raw_data_dir_gasp, "/", filename, ".gz")
download.file(source, dest)
gunzip(paste0(dest))
filename <- "GSE120861_grna_groups.at_scale.txt"
if (!file.exists(paste0(raw_data_dir_gasp, "/", filename))) {
print(paste0("Downloading ", filename))
source <- paste0(remote, filename, ".gz")
dest <- paste0(raw_data_dir_gasp, "/", filename, ".gz")
download.file(source, dest)
gunzip(paste0(dest))
}
# source config file to get gasperini offsite location
gasp_offsite <- .get_config_path("LOCAL_GASPERINI_2019_DATA_DIR")
